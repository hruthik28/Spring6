spring.application.name=SpringOauth2

#spring.security.oauth2.client.registration.google.client-id=608685891993-b3jm6qu740q08d0au0h0veon4pls1b9r.apps.googleusercontent.com
#spring.security.oauth2.client.registration.google.client-sceret=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


#google cloud console -> api and services -> credentials -> create credentials (oauth client id) -> application type (web) + authorized redirect URIs(http://localhost:8080/login/oauth2/code/google (if using http://localhost:8080/login/oauth2/code/login will get a button to select google)) -> will provide client id and secret


#spring.security.oauth2.client.registration.github.client-id=608685891993-b3jm6qu740q08d0au0h0veon4pls1b9r.apps.googleusercontent.com
#spring.security.oauth2.client.registration.github.client-sceret=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

#github -> settings -> developer settings -> oauth apps -> new and callbackurl (http://localhost:8080/login/oauth2/code/github)